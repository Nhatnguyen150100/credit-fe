import { Button, message } from "antd";
import * as React from "react";
import axiosRequest from "../../../plugins/request";
import { toast } from "react-toast";
import { IBank } from "../../../types/bank";
import { ArrowLeftOutlined, PhoneOutlined } from "@ant-design/icons";
import { useNavigate } from "react-router-dom";
import { useSelector } from "react-redux";
import { IRootState } from "../../../lib/store";
import { copyToClipboard } from "../../../utils/copy-clipboard";

export default function PaymentMethod() {
  const [listBank, setListBank] = React.useState<IBank[]>([]);
  const user = useSelector((state: IRootState) => state.user);
  const [isMobile, setIsMobile] = React.useState<boolean>(false);
  console.log("üöÄ ~ PaymentMethod ~ isMobile:", isMobile);
  const navigate = useNavigate();

  const handleGetBank = async () => {
    try {
      const rs = await axiosRequest.get("/v1/bank");
      if (rs.data.data) {
        setListBank(rs.data.data);
      }
    } catch (error: any) {
      toast.error(error.message);
    }
  };

  React.useEffect(() => {
    handleGetBank();
    const handleResize = () => {
      setIsMobile(window.innerWidth < 640);
    };
    window.addEventListener("resize", handleResize);
    handleResize();

    return () => window.removeEventListener("resize", handleResize);
  }, []);

  // const columns: TableProps<IBank>["columns"] = [
  //   {
  //     title: "T√™n ng√¢n h√†ng",
  //     dataIndex: "name_bank",
  //     key: "bankName",
  //     render: (text) => (
  //       <span className="text-xl font-bold uppercase">{text}</span>
  //     ),
  //   },
  //   {
  //     title: "T√™n ch·ªß t√†i kho·∫£n",
  //     dataIndex: "name_account",
  //     key: "accountName",
  //     render: (text) => (
  //       <span className="text-lg font-semibold uppercase">{text}</span>
  //     ),
  //   },
  //   {
  //     title: "S·ªë t√†i kho·∫£n",
  //     key: "accountNumber",
  //     dataIndex: "account_number",
  //     render: (text) => (
  //       <Tooltip title="Nh·∫•n ƒë·ªÉ sao ch√©p s·ªë t√†i kho·∫£n">
  //         <span
  //           className="text-lg font-semibold uppercase text-blue-500 hover:underline hover:text-blue-800 cursor-pointer"
  //           onClick={() => {
  //             copyToClipboard(text);
  //           }}
  //         >
  //           {text}
  //         </span>
  //       </Tooltip>
  //     ),
  //   },
  //   {
  //     title: "QR code",
  //     key: "qrUrl",
  //     dataIndex: "qr_code_img",
  //     render: (url) => (
  //       <img
  //         crossOrigin="anonymous"
  //         className="h-[160px]"
  //         alt="QR code"
  //         src={url}
  //       />
  //     ),
  //   },
  // ];

  return (
    <div className="w-full flex items-center justify-center">
      <div className="h-screen overflow-y-auto w-screen flex flex-col justify-start items-center bg-gray-100 sm:max-w-[450px] sm:border">
        <div className="shadow sticky top-0 z-10 py-3 px-4 flex justify-between items-center w-full bg-blue-700 border-b border-white">
          <ArrowLeftOutlined
            className="text-white"
            onClick={() => navigate(-1)}
          />
          <span className="text-sm text-white font-light">
            Thanh to√°n tr·ª±c tuy·∫øn
          </span>
          <PhoneOutlined className="text-white" />
        </div>
        <div className="bg-white w-full p-5 flex flex-col justify-start items-start space-y-4">
          <div className="w-full flex flex-row justify-start items-center pb-3 border-b border-gray-300 space-x-3">
            <label className="text-sm min-w-[80px]">Ng√¢n h√†ng</label>
            <span className="text-sm text-gray-600">
              {listBank[0]?.name_bank}
            </span>
          </div>
          <div className="w-full flex flex-row justify-between items-center pb-3 border-b border-gray-300 space-x-3">
            <div className=" space-x-3">
              <label className="text-sm min-w-[80px]">T√™n t√†i kho·∫£n</label>
              <span className="text-sm text-gray-600">
                {listBank[0]?.name_account}
              </span>
            </div>
            <Button
              type="primary"
              onClick={() => {
                copyToClipboard(
                  listBank[0]?.name_account,
                  "Sao ch√©p t√™n t√†i kho·∫£n th√†nh c√¥ng"
                );
              }}
            >
              Copy
            </Button>
          </div>
          <div className="w-full flex flex-row justify-between items-center pb-3 border-b border-gray-300">
            <div className=" space-x-3">
              <label className="text-sm min-w-[80px]">S·ªë t√†i kho·∫£n</label>
              <span className="text-sm text-gray-600">
                {listBank[0]?.account_number}
              </span>
            </div>
            <Button
              type="primary"
              onClick={() => {
                copyToClipboard(
                  listBank[0]?.account_number,
                  "Sao ch√©p s·ªë t√†i kho·∫£n th√†nh c√¥ng"
                );
              }}
            >
              Copy
            </Button>
          </div>
          <div className="w-full flex flex-row justify-start items-center pb-3 border-b border-gray-300 space-x-3">
            <label className="text-sm min-w-[80px]">S·ªë ti·ªÅn c·∫ßn tr·∫£</label>
            <span className="text-sm text-gray-600">
              {user?.amount_payable.toLocaleString()}
            </span>
          </div>
        </div>
        <p className="text-base md:text-2xl font-bold max-w-[820px] text-center px-5 mt-5">
          Thanh to√°n vui l√≤ng g·ªüi h√≥a ƒë∆°n cho h·ªó tr·ª£ vi√™n qua zalo ƒë·ªÉ ƒë∆∞·ª£c h·ªó
          tr·ª£ x√≥a n·ª£ v√† vay l·∫°i
        </p>
        <div className="flex flex-col mt-5 justify-start items-start space-y-2 w-full px-5">
          <span className="text-gray-500 text-sm">
            <sup>*</sup>H∆∞·ªõng d·∫´n tr·∫£ ti·ªÅn
          </span>
          <ul className="list-decimal text-gray-500 text-sm space-y-2 ms-3">
            <li>
              B·∫°n c√≥ th·ªÉ ch·ªçn chuy·ªÉn kho·∫£n, ƒë·∫øn ng√¢n h√†ng, c·ª≠a h√†ng Viettel,...
              ƒë·ªÉ th·ª±c hi·ªán thao t√°c thanh to√°n ti·ªÅn.
            </li>
            <li>
              Vui l√≤ng ƒë·∫£m b·∫£o nh·∫≠p ƒë·∫ßy ƒë·ªß t√†i kho·∫£n ng√¢n h√†ng khi th·ª±c hi·ªán
              thao t√°c tr·∫£ n·ª£. N·∫øu c√≥ c√°c ch·ªØ c√°i trong t√†i kho·∫£n, h√£y ƒë·∫£m b·∫£o
              nh·∫≠p ƒë·∫ßy ƒë·ªß c√°c ch·ªØ c√°i ƒë·ªë c≈©ng l√† m·ªôt ph·∫ßn c·ªßa t√†i kho·∫£n. Vi·ªác
              nh·∫≠p t√†i kho·∫£n kh√¥ng ƒë·∫ßy ƒë·ªß s·∫Ω khi·∫øn ng√¢n h√†ng m·∫•t ti·ªÅn c·ªßa b·∫°n
              ho·∫∑c b·ªã ng√¢n h√†ng t·ª´ ch·ªëi.
            </li>
            <li>
              Do h·ªá th·ªëng ng√¢n h√†ng, "chuy·ªÉn kho·∫£n th√¥ng th∆∞·ªùng", kh√¥ng ƒë·∫£m b·∫£o
              r·∫±ng ti·ªÅn s·∫Ω ƒë·∫øn t√†i kho·∫£n c·ªßa ch√∫ng t√¥i ƒë√∫ng l√∫c. Ch√∫ng t√¥i ch·ªâ
              c√≥ th·ªÉ ƒë√°nh gi√° s·ªë ti·ªÅn g·ª≠i th·ª±c t·∫ø c·ªßa b·∫°n v√† x√≥a s·ªë ti·ªÅn ƒë√≥ d·ª±a
              tr√™n th·ªùi gian th·ª±c g·ª≠i ti·ªÅn v√†o ng√¢n h√†ng.
            </li>
          </ul>
        </div>
        {/* {isMobile ? (
        <div className="flex flex-col space-y-4">
          {listBank.map((bank) => (
            <div key={bank._id} className="border p-4 rounded shadow">
              <div>
                <span className="font-semibold">T√™n ng√¢n h√†ng:</span>{" "}
                <span className="text-lg">{bank.name_bank}</span>
              </div>
              <div>
                <span className="font-semibold">T√™n ch·ªß t√†i kho·∫£n:</span>{" "}
                <span className="text-lg">{bank.name_account}</span>
              </div>
              <div>
                <span className="font-semibold">S·ªë t√†i kho·∫£n:</span>{" "}
                <Tooltip title="Nh·∫•n ƒë·ªÉ sao ch√©p s·ªë t√†i kho·∫£n">
                  <span
                    className="text-lg text-blue-500 hover:underline cursor-pointer"
                    onClick={() => copyToClipboard(bank.account_number)}
                  >
                    {bank.account_number}
                  </span>
                </Tooltip>
              </div>
              <div className="flex flex-col justify-center items-center">
                <span className="font-semibold">QR code:</span>
                <img
                  crossOrigin="anonymous"
                  className="h-32 w-auto mt-1"
                  alt="QR code"
                  src={bank.qr_code_img}
                />
              </div>
            </div>
          ))}
        </div>
      ) : (
        <div className="w-full">
          <Table<IBank>
            rowKey="id"
            columns={columns}
            dataSource={listBank}
            pagination={false}
          />
        </div>
      )} */}
      </div>
    </div>
  );
}
